# Generated by Django 2.0 on 2021-01-17 10:00

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import voting.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('age', models.PositiveIntegerField(null=True)),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('auto_community', models.TextField(choices=[('AN', 'Andalucia'), ('AR', 'Aragon'), ('AS', 'Asturias'), ('BA', 'Baleares'), ('CA', 'Canarias'), ('CT', 'Cantabria'), ('CAM', 'Castilla-Mancha'), ('CAL', 'Castilla-Leon'), ('CAT', 'Cataluña'), ('CE', 'Ceuta'), ('EX', 'Extremadura'), ('GA', 'Galicia'), ('LR', 'La-Rioja'), ('MA', 'Madrid'), ('ME', 'Melilla'), ('MU', 'Murcia'), ('NA', 'Navarra'), ('PV', 'País-Vasco'), ('VA', 'Valencia')], default='AN')),
                ('sex', models.TextField(choices=[('H', 'HOMBRE'), ('M', 'MUJER')], default='H')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleVoting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tally', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('postproc', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('auths', models.ManyToManyField(related_name='multiple_votings', to='base.Auth')),
                ('pub_key', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='multiple_voting', to='base.Key')),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abreviatura', models.TextField(max_length=10)),
                ('nombre', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Plank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('plank', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('overview', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('option', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='voting.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOrdering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('option', models.TextField()),
                ('ordering', models.PositiveIntegerField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options_ordering', to='voting.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionPrefer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefer', models.TextField(blank=True, choices=[('YES', 'YES')])),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('option', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefer_options', to='voting.Question')),
            ],
        ),
        migrations.CreateModel(
            name='ReadonlyVoting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.TextField(max_length=100, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tally', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('postproc', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('auths', models.ManyToManyField(related_name='readonly_votings', to='base.Auth')),
                ('pub_key', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readonly_voting', to='base.Key')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readonly_voting', to='voting.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Voting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('escanios', models.PositiveSmallIntegerField(default=0)),
                ('start_date', models.DateTimeField(blank=True, null=True, validators=[voting.models.validate_start_date])),
                ('end_date', models.DateTimeField(blank=True, null=True, validators=[voting.models.validate_end_date])),
                ('min_age', models.PositiveIntegerField(blank=True, null=True, validators=[voting.models.validate_age])),
                ('max_age', models.PositiveIntegerField(blank=True, null=True, validators=[voting.models.validate_age])),
                ('customURL', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('tally', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('postproc', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('auths', models.ManyToManyField(related_name='votings', to='base.Auth')),
                ('candidates', models.ManyToManyField(blank=True, related_name='votings', to='voting.Candidate')),
                ('pub_key', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voting', to='base.Key')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='voting', to='voting.Question')),
            ],
        ),
        migrations.AddField(
            model_name='plank',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planks', to='voting.Program'),
        ),
        migrations.AddField(
            model_name='party',
            name='program',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='party', to='voting.Program'),
        ),
        migrations.AddField(
            model_name='multiplevoting',
            name='question',
            field=models.ManyToManyField(related_name='multiple_voting', to='voting.Question'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='political_party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to='voting.Party'),
        ),
    ]
